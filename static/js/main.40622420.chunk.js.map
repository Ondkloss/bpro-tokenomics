{"version":3,"sources":["Utils.js","TokenPie.js","TokenArea.js","TokenCirculating.js","ReservoirMovement.js","DeveloperFundMovement.js","Sources.js","Links.js","App.js","reportWebVitals.js","index.js"],"names":["calculateIntermediatePoints","startX","startY","endX","endY","result","gapY","i","push","applyReductionsToIntermediatePoints","intermediatePoints","xReducations","forEach","xReduction","x","reduction","map","value","index","cutToMaxLength","dataArray","maxLength","length","slice","addPointCopies","point","numberOfCopies","Array","fill","numberToYearMonthString","number","month","year","Math","floor","getListOfYearMonthStrings","from","to","options","Highcharts","merge","title","text","undefined","colors","credits","enabled","yAxis","chart","type","tooltip","formatter","this","key","numberFormat","y","percentage","series","data","name","pie","highcharts","plotOptions","area","stacking","marker","symbol","max","shared","sum","points","xAxis","categories","tickInterval","concat","ListGroup","className","Item","numberOfMonthsCovered","circulating","reservoir","href","developerFund","sources","links","size","App","Container","Row","Card","Body","Title","Subtitle","TokenPie","TokenArea","TokenCirculating","ReservoirMovement","DeveloperFundMovement","Sources","Links","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40622420.chunk.js","sourcesContent":["const calculateIntermediatePoints = (startX, startY, endX, endY) => {\r\n    const result = []\r\n    const diffY = endY - startY;\r\n    const gapY = diffY / (endX - startX);\r\n\r\n    for (let i = startX; i <= endX; i++) {\r\n        result.push(startY + (gapY * (i - startX)))\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nconst applyReductionsToIntermediatePoints = (intermediatePoints, xReducations) => {\r\n    let result = [...intermediatePoints]\r\n\r\n    xReducations.forEach((xReduction) => {\r\n        const x = xReduction[0]\r\n        const reduction = xReduction[1]\r\n\r\n        result = result.map((value, index) => {\r\n            if(index >= x) {\r\n                return value - reduction\r\n            }\r\n            else {\r\n                return value\r\n            }\r\n        })\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nconst cutToMaxLength = (dataArray, maxLength) => {\r\n    if(dataArray.length > maxLength) {\r\n        return dataArray.slice(0, maxLength)\r\n    }\r\n    else {\r\n        return dataArray\r\n    }\r\n}\r\n\r\nconst addPointCopies = (point, numberOfCopies) => {\r\n    return Array(numberOfCopies).fill(point)\r\n}\r\n\r\n// Assumption: All data starts at 0 meaning April 2021, and then increases month by month\r\nconst numberToYearMonthString = (number) => {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    const month = ((number % 12) + 3) % 12\r\n    const year = Math.floor(((number + 3) / 12) + 2021)\r\n\r\n    return months[month]+\" \"+year\r\n}\r\n\r\nconst getListOfYearMonthStrings = (from, to) => {\r\n    const result = []\r\n\r\n    for(let i = from; i <= to; i++) {\r\n        result.push(numberToYearMonthString(i))\r\n    }\r\n    \r\n    return result\r\n}\r\n\r\nconst getDefaultChartOptions = () => {\r\n    return {\r\n        title: {\r\n            text: undefined\r\n        },\r\n        colors: [\"#20ae5e\", \"#24c168\", \"#3ac777\", \"#50cd86\", \"#66d495\", \"#7cdaa4\", \"#92e0b4\", \"#a7e6c3\", \"#bdecd2\", \"#d3f3e1\", \"#e9f9f0\"],\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: undefined\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    calculateIntermediatePoints,\r\n    applyReductionsToIntermediatePoints,\r\n    addPointCopies,\r\n    getListOfYearMonthStrings,\r\n    getDefaultChartOptions,\r\n    cutToMaxLength\r\n}","import React from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport { getDefaultChartOptions } from './Utils'\r\n\r\nconst options = Highcharts.merge(getDefaultChartOptions(), {\r\n    chart: {\r\n        type: 'pie'\r\n    },\r\n    tooltip: {\r\n        formatter: function () {\r\n            return this.key + \": <b>\" + Highcharts.numberFormat(this.y, 0) + \" BPRO</b> (\"+this.percentage+\"%)\"\r\n        }\r\n    },\r\n    series: [{\r\n        data: [{\r\n            name: \"Reservoir (Treasury), distributed over 4 years\",\r\n            y: 1_325_000 * 4\r\n        }, {\r\n            name: \"Developer fund, distributed over 4 years\",\r\n            y: 825_000 * 4\r\n        }, {\r\n            name: \"Maker pre-genesis users, instant distribution\",\r\n            y: 500_000\r\n        }, {\r\n            name: \"Compound pre-genesis users, instant distribution\",\r\n            y: 500_000\r\n        }, {\r\n            name: \"Genesis liquidity mining, distributed over 3 months\",\r\n            y: 250_000\r\n        }, {\r\n            name: \"Genesis backstop, distributed over 1 year\",\r\n            y: 150_000\r\n        }]\r\n    }]\r\n})\r\n\r\nconst pie = () => <>\r\n    <HighchartsReact\r\n    highcharts={Highcharts}\r\n    options={options}\r\n    />\r\n</>\r\n\r\nexport default pie","import React from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport { calculateIntermediatePoints, addPointCopies, getListOfYearMonthStrings, getDefaultChartOptions } from './Utils'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst options = Highcharts.merge(getDefaultChartOptions(), {\r\n    chart: {\r\n        type: 'area',\r\n    },\r\n    plotOptions: {\r\n        area: {\r\n            stacking: \"Normal\"\r\n        },\r\n        series: {\r\n            marker: {\r\n                enabled: false,\r\n                symbol: \"circle\"\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        max: 10_000_000\r\n    },\r\n    tooltip: {\r\n        shared: true,\r\n        formatter: function () {\r\n            let result = \"\";\r\n            let sum = 0;\r\n\r\n            this.points.forEach(point => {\r\n                result += point.series.name + \": <b>\" + Highcharts.numberFormat(point.y, 0) + \" BPRO</b><br/>\"\r\n                sum += point.y\r\n            })\r\n\r\n            result = \"<b>\" + this.points[0].x + \" <> \" + this.points[0].point.x + \" months (Total: \" + Highcharts.numberFormat(sum, 0) + \" BPRO)</b><br />\" + result\r\n\r\n            return result;\r\n        }\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        categories: getListOfYearMonthStrings(0, 49),\r\n        tickInterval: 3\r\n    },\r\n    series: [{\r\n        name: \"Reservoir (Treasury)\",\r\n        data: calculateIntermediatePoints(0, 0, 48, 1_325_000 * 4)\r\n    }, {\r\n        name: \"Developer fund\",\r\n        data: calculateIntermediatePoints(0, 0, 48, 825_000 * 4)\r\n    }, {\r\n        name: \"Maker pre-genesis users\",\r\n        data: calculateIntermediatePoints(0, 500_000, 48, 500_000)\r\n    }, {\r\n        name: \"Compound pre-genesis users\",\r\n        data: calculateIntermediatePoints(0, 500_000, 48, 500_000)\r\n    }, {\r\n        name: \"Genesis backstop\",\r\n        data: []\r\n            .concat(calculateIntermediatePoints(0, 0, 12, 150_000))\r\n            .concat(addPointCopies(150_000, 49 - 13))\r\n    }, {\r\n        name: \"Genesis liquidity mining\",\r\n        data: []\r\n            .concat(calculateIntermediatePoints(0, 0, 3, 250_000, 4).slice(0, -1))\r\n            .concat(calculateIntermediatePoints(3, 250_000, 48, 250_000, 46))\r\n    }]\r\n})\r\n\r\nconst area = () => <>\r\n    <HighchartsReact\r\n        highcharts={Highcharts}\r\n        options={options}\r\n    />\r\n    <ListGroup className=\"mx-5\">\r\n        <ListGroup.Item className=\"active\">\r\n            <b>Notes</b>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n            <b>Reservoir (Treasury):</b> Issuance is 1 325 000 BPRO per year, for 4 years\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n            <b>Developer fund:</b> Issuance is 825 000 BPRO per year, for 4 years\r\n        </ListGroup.Item>\r\n    </ListGroup>\r\n</>\r\n\r\nexport default area","import React from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { calculateIntermediatePoints, addPointCopies, getListOfYearMonthStrings, getDefaultChartOptions, cutToMaxLength } from './Utils';\r\n\r\nconst numberOfMonthsCovered = 10\r\n\r\nconst options = Highcharts.merge(getDefaultChartOptions(), {\r\n    chart: {\r\n        type: 'area',\r\n    },\r\n    plotOptions: {\r\n        area: {\r\n            stacking: \"Normal\"\r\n        },\r\n        series: {\r\n            marker: {\r\n                enabled: false,\r\n                symbol: \"circle\"\r\n            }\r\n        }\r\n    },\r\n    tooltip: {\r\n        shared: true,\r\n        formatter: function () {\r\n            let result = \"\";\r\n            let sum = 0;\r\n\r\n            this.points.forEach(point => {\r\n                result += point.series.name + \": <b>\" + Highcharts.numberFormat(point.y, 0) + \" BPRO</b><br/>\"\r\n                sum += point.y\r\n            })\r\n\r\n            result = \"<b>\" + this.points[0].x+\" <> \"+this.points[0].point.x + \" months (Total: \" + Highcharts.numberFormat(sum, 0) + \" BPRO)</b><br />\" + result\r\n\r\n            return result;\r\n        }\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        categories: getListOfYearMonthStrings(0, numberOfMonthsCovered)\r\n    },\r\n    series: [{\r\n        name: \"Maker pre-genesis users\",\r\n        data: addPointCopies(500_000, numberOfMonthsCovered)\r\n    }, {\r\n        name: \"Compound pre-genesis users\",\r\n        data: addPointCopies(500_000, numberOfMonthsCovered)\r\n    }, {\r\n        name: \"Genesis backstop\",\r\n        data: cutToMaxLength(calculateIntermediatePoints(0, 0, 12, 150_000), numberOfMonthsCovered)\r\n    }, {\r\n        name: \"Genesis liquidity mining\",\r\n        data:  []\r\n            .concat(addPointCopies(0, 3))\r\n            .concat(addPointCopies(250_000, numberOfMonthsCovered - 3))\r\n    }, {\r\n        name: \"Second liquidity mining (BIP-4)\",\r\n        data:  []\r\n            .concat(addPointCopies(0, 8))\r\n            .concat(addPointCopies(30_000, numberOfMonthsCovered - 8))\r\n    }, {\r\n        name: \"Venture capital round\",\r\n        data: cutToMaxLength(\r\n            calculateIntermediatePoints(0, 0, 48, 538_840),\r\n            numberOfMonthsCovered)\r\n    }]\r\n})\r\n\r\nconst circulating = () =>\r\n    <>\r\n        <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n        />\r\n        <ListGroup className=\"mx-5\">\r\n            <ListGroup.Item className=\"active\">\r\n                <b>Notes</b>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>April 2021 (0 months):</b> 1 000 000 BPRO - Genesis distribution to Maker and Compound pre-genesis users<br />\r\n                <b>Source:</b> One time minting\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>April 2021 (0 months):</b>: 150 000 BPRO - Started genesis backstop 1 year drip<br />\r\n                <b>Source:</b> One time minting\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>July 2021 (3 months):</b>: 250 000 BPRO - Genesis liquidity mining distributed<br />\r\n                <b>Source:</b> One time minting\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>December 2021 (8 months):</b> 30 000 BPRO - Second liquidity mining period KPI options (BIP-4)<br />\r\n                <b>Source:</b> Reservoir (Treasury)\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>December 2021:</b> 538 840 BPRO - Venture capital seed round, vested linearly over 4 years (unconfirmed amount, but equal to moved BPRO at time of entry)<br />\r\n                <b>Source:</b> Developer fund\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <ListGroup className=\"mx-5 mt-3\">\r\n            <ListGroup.Item className=\"active\">\r\n                <b>Excluded</b>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>Growth squad:</b> 25 000 BPRO - Can be spent by growth squad multisig<br />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>Developer fund:</b> 825 000 BPRO per year - Can be spent by developer multisig<br />\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    </>\r\n\r\nexport default circulating","import React from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport { calculateIntermediatePoints, applyReductionsToIntermediatePoints, addPointCopies, getListOfYearMonthStrings, getDefaultChartOptions, cutToMaxLength } from './Utils'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst address = \"https://etherscan.io/address/0xcC09c04A9e3930343290184544F97669eFF18A8d\"\r\nconst numberOfMonthsCovered = 10\r\n\r\nconst options = Highcharts.merge(getDefaultChartOptions(), {\r\n    chart: {\r\n        type: 'area',\r\n    },\r\n    plotOptions: {\r\n        area: {\r\n            stacking: \"Normal\"\r\n        },\r\n        series: {\r\n            marker: {\r\n                enabled: false,\r\n                symbol: \"circle\"\r\n            }\r\n        }\r\n    },\r\n    tooltip: {\r\n        shared: true,\r\n        formatter: function () {\r\n            let result = \"\";\r\n            let sum = 0;\r\n\r\n            this.points.forEach(point => {\r\n                result += point.series.name + \": <b>\" + Highcharts.numberFormat(point.y, 0) + \" BPRO</b><br/>\"\r\n                sum += point.y\r\n            })\r\n\r\n            result = \"<b>\" + this.points[0].x + \" <> \" + this.points[0].point.x + \" months (Total: \" + Highcharts.numberFormat(sum, 0) + \" BPRO)</b><br />\" + result\r\n\r\n            return result;\r\n        }\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        categories: getListOfYearMonthStrings(0, numberOfMonthsCovered)\r\n    },\r\n    series: [{\r\n        name: \"Reservoir (Treasury)\",\r\n        data: cutToMaxLength(\r\n            applyReductionsToIntermediatePoints(calculateIntermediatePoints(0, 0, 48, 1_325_000 * 4),\r\n            [\r\n                [5, 200_000],\r\n                [5, 90_000],\r\n                [5, 25_000],\r\n                [5, 50_000]\r\n            ]),\r\n            numberOfMonthsCovered)\r\n    }, {\r\n        name: \"v2 native integration rewards (BIP-3)\",\r\n        data: cutToMaxLength(\r\n            []\r\n            .concat(addPointCopies(0, 5))\r\n            .concat(addPointCopies(200_000, 49 - 5)),\r\n            numberOfMonthsCovered)\r\n    }, {\r\n        name: \"Second liquidity mining (BIP-4)\",\r\n        data: cutToMaxLength(\r\n            []\r\n            .concat(addPointCopies(0, 5))\r\n            .concat(addPointCopies(90_000, 49 - 5)),\r\n            numberOfMonthsCovered)\r\n    }, {\r\n        name: \"Growth squad (BIP-5)\",\r\n        data: cutToMaxLength(\r\n            []\r\n            .concat(addPointCopies(0, 5))\r\n            .concat(addPointCopies(25_000, 49 - 5)),\r\n            numberOfMonthsCovered)\r\n    }, {\r\n        name: \"Immunefi bug bounty (BIP-6) and Hats.finance (BIP-7)\",\r\n        data: cutToMaxLength(\r\n            []\r\n            .concat(addPointCopies(0, 5))\r\n            .concat(addPointCopies(50_000, 49 - 5)),\r\n            numberOfMonthsCovered)\r\n    }]\r\n})\r\n\r\nconst reservoir = () => <>\r\n    <HighchartsReact\r\n        highcharts={Highcharts}\r\n        options={options}\r\n    />\r\n    <ListGroup className=\"mx-5\">\r\n        <ListGroup.Item className=\"active\">\r\n            <b>Notes</b>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n            <b>Smart contract:</b> Address is <a href={address}>0xcC09c04A9e3930343290184544F97669eFF18A8d</a>\r\n        </ListGroup.Item>\r\n    </ListGroup>\r\n</>\r\n\r\nexport default reservoir","import React from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport { calculateIntermediatePoints, applyReductionsToIntermediatePoints, getListOfYearMonthStrings, getDefaultChartOptions, cutToMaxLength, addPointCopies } from './Utils'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst address = \"https://etherscan.io/address/0x225f27022a50aF2735287262a47bdacA2315a43E\"\r\nconst numberOfMonthsCovered = 10\r\n\r\nconst options = Highcharts.merge(getDefaultChartOptions(), {\r\n    chart: {\r\n        type: 'area',\r\n    },\r\n    plotOptions: {\r\n        area: {\r\n            stacking: \"Normal\"\r\n        },\r\n        series: {\r\n            marker: {\r\n                enabled: false,\r\n                symbol: \"circle\"\r\n            }\r\n        }\r\n    },\r\n    tooltip: {\r\n        shared: true,\r\n        formatter: function () {\r\n            let result = \"\";\r\n            let sum = 0;\r\n\r\n            this.points.forEach(point => {\r\n                result += point.series.name + \": <b>\" + Highcharts.numberFormat(point.y, 0) + \" BPRO</b><br/>\"\r\n                sum += point.y\r\n            })\r\n\r\n            result = \"<b>\" + this.points[0].x + \" <> \" + this.points[0].point.x + \" months (Total: \" + Highcharts.numberFormat(sum, 0) + \" BPRO)</b><br />\" + result\r\n\r\n            return result;\r\n        }\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        categories: getListOfYearMonthStrings(0, numberOfMonthsCovered)\r\n    },\r\n    series: [{\r\n        name: \"Developer fund\",\r\n        data: cutToMaxLength(\r\n            applyReductionsToIntermediatePoints(calculateIntermediatePoints(0, 0, 48, 825_000 * 4),\r\n            [\r\n                [8, 538_840]\r\n            ]),\r\n            numberOfMonthsCovered)\r\n    }, {\r\n        name: \"Venture capital seed  round\",\r\n        data: cutToMaxLength(\r\n            []\r\n            .concat(addPointCopies(0, 8))\r\n            .concat(addPointCopies(538_840, 49 - 8)),\r\n            numberOfMonthsCovered)\r\n    }]\r\n})\r\n\r\nconst developerFund = () => <>\r\n    <HighchartsReact\r\n        highcharts={Highcharts}\r\n        options={options}\r\n    />\r\n    <ListGroup className=\"mx-5\">\r\n        <ListGroup.Item className=\"active\">\r\n            <b>Notes</b>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n            <b>Smart contract:</b> Address is <a href={address}>0x225f27022a50aF2735287262a47bdacA2315a43E</a>\r\n        </ListGroup.Item>\r\n            <ListGroup.Item>\r\n                <b>Venture capital seed round:</b> Vested linearly over 4 years from April 2021 (unconfirmed amount, but equal to moved BPRO at time of entry)\r\n            </ListGroup.Item>\r\n    </ListGroup>\r\n</>\r\n\r\nexport default developerFund","\r\nimport React from 'react'\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst bproGenesis = \"https://forum.bprotocol.org/t/b-protocol-governance-token/48\"\r\nconst v2NativeIntegrations = \"https://forum.bprotocol.org/t/bip-3-allocating-bpro-to-reward-v2-native-integrations/166\"\r\nconst secondLiquidityMining = \"https://forum.bprotocol.org/t/bip-4-use-umas-kpi-options-program-for-users-liquidity-mining/167\"\r\nconst growthSquad = \"https://forum.bprotocol.org/t/bip-5-growth-squad-fund/168\"\r\nconst immunefiBugBounty = \"https://forum.bprotocol.org/t/bip-6-backing-b-protocol-immunefi-bug-bounty-program/169\"\r\nconst hatsFinance = \"https://forum.bprotocol.org/t/bip-7-b-protocol-white-hat-incentive-vault-funding-proposal/181\"\r\nconst smartContracts = \"https://docs.bprotocol.org/technical-documentation/smart-contracts\"\r\nconst ventureCapital = \"https://medium.com/b-protocol/b-protocol-secures-2-2m-5e275ca0d979\"\r\n\r\nconst sources = () => <ListGroup className=\"mx-5\">\r\n    <ListGroup.Item>\r\n        <a href={bproGenesis}>B.Protocol Governance Token</a>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <a href={v2NativeIntegrations}>BIP #3 - Allocating BPRO to reward v2 native integrations</a>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <a href={secondLiquidityMining}>BIP #4 - Use UMA's KPI Options Program for users' Liquidity Mining</a>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <a href={growthSquad}>BIP #5 - Growth Squad Fund</a>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <a href={immunefiBugBounty}>BIP #6 - Backing B.Protocol-Immunefi Bug Bounty Program</a>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <a href={hatsFinance}>BIP #7 - B.protocol white hat incentive vault funding proposal</a>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <a href={ventureCapital}>B.Protocol Secures $2.2M in a Seed Round, Led by 1kx, To Make DeFi Liquidations Safer and More Efficient</a>\r\n    </ListGroup.Item>\r\n    <ListGroup.Item>\r\n        <a href={smartContracts}>B.Protocol Smart Contracts</a>\r\n    </ListGroup.Item>\r\n</ListGroup>\r\n\r\nexport default sources","\r\nimport React from 'react'\r\nimport { Github, Discord } from 'react-bootstrap-icons'\r\n\r\nconst github = \"https://github.com/Ondkloss/bpro-tokenomics\"\r\nconst discord = \"https://discord.gg/bJ4guuw\"\r\n\r\nconst links = () => <div>\r\n    <a href={github}><Github size={32} className=\"mx-2\" /></a>\r\n    <a href={discord}><Discord size={32} className=\"mx-2\" /></a>\r\n</div>\r\n\r\nexport default links\r\n","import React from 'react'\r\nimport TokenPie from './TokenPie'\r\nimport TokenArea from './TokenArea'\r\nimport TokenCirculating from './TokenCirculating'\r\nimport ReservoirMovement from './ReservoirMovement'\r\nimport DeveloperFundMovement from './DeveloperFundMovement'\r\nimport Sources from './Sources'\r\nimport './styles.css';\r\nimport { Card, Container, Row } from 'react-bootstrap';\r\nimport Links from './Links'\r\n\r\nconst App = () => <Container>\r\n  <Row className=\"mx-1 mt-2\">\r\n    <Card className=\"my-2\">\r\n      <Card.Body>\r\n    <h1 className=\"text-center\">Community made BPRO Tokenomics</h1>\r\n    <p className=\"text-muted text-center\">Highly unofficial, but based on best knowledge</p>\r\n    </Card.Body>\r\n    </Card>\r\n  </Row>\r\n  <Row className=\"mx-1\">\r\n    <Card className=\"my-2\">\r\n      <Card.Body>\r\n        <Card.Title className=\"text-center\">BPRO distribution total</Card.Title>\r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\">Distribution total, after all distribution has ended (10 million)</Card.Subtitle>\r\n        <TokenPie />\r\n      </Card.Body>\r\n    </Card>\r\n  </Row>\r\n  <Row className=\"mx-1\"><Card className=\"my-2\">\r\n    <Card.Body>\r\n      <Card.Title className=\"text-center\">BPRO distribution over time</Card.Title>\r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\">Starting 26th of April, 2021 and ending 26th of April, 2025 (4 years)</Card.Subtitle>\r\n      <TokenArea />\r\n    </Card.Body>\r\n  </Card>\r\n  </Row>\r\n  <Row className=\"mx-1\"><Card className=\"my-2\">\r\n    <Card.Body>\r\n      <Card.Title className=\"text-center\">Circulating supply</Card.Title>\r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\">What has been distributed and is liquid (not well defined or complete, description in tooltip)</Card.Subtitle>\r\n      <TokenCirculating />\r\n    </Card.Body>\r\n  </Card>\r\n  </Row>\r\n  <Row className=\"mx-1\"><Card className=\"my-2\">\r\n    <Card.Body>\r\n      <Card.Title className=\"text-center\">Reservoir (Treasury) movement</Card.Title>\r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\">Movements from the DAO reservoir</Card.Subtitle>\r\n      <ReservoirMovement />\r\n    </Card.Body>\r\n  </Card>\r\n  </Row>\r\n  <Row className=\"mx-1\"><Card className=\"my-2\">\r\n    <Card.Body>\r\n      <Card.Title className=\"text-center\">Developer fund movement</Card.Title>\r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\">Movements from the Developer fund</Card.Subtitle>\r\n      <DeveloperFundMovement />\r\n    </Card.Body>\r\n  </Card>\r\n  </Row>\r\n  <Row className=\"mx-1 mb-3\"><Card className=\"my-2\">\r\n    <Card.Body>\r\n      <Card.Title className=\"text-center\">Sources</Card.Title>\r\n      <Sources />\r\n    </Card.Body>\r\n  </Card>\r\n  </Row>\r\n  <Row className=\"mx-1 mb-3 text-center\">\r\n      <Links />\r\n  </Row>\r\n</Container>\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}